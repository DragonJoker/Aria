name: Dependencies

on:
  workflow_dispatch

env:
    VCPKG_COMMIT_ID: 55112eb54a1c4cfaec5dd2592a39cea72f78ed56

jobs:
  vcpkg:
    strategy:
      matrix:
        os: [[windows-latest,x64-windows,msvc]]
        buildType: [Release]

    runs-on: ${{ matrix.os[0] }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v4
      with:
        vcpkgGitCommitId: '${{ env.VCPKG_COMMIT_ID }}'
        setupOnly: true

    - name: Install necessary G++ version (Linux)
      if: runner.os == 'Linux' && matrix.os[2] == 'gcc'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends ccache gcc-10 g++-10 libgtk-3-dev

    - name: Install necessary Clang++ version (Linux)
      if: runner.os == 'Linux' && matrix.os[2] == 'clang'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends ccache clang-12 clang++-12 libgtk-3-dev

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build-${{ matrix.buildType }}

    - name: Configure GCC version (Linux)
      if: runner.os == 'Linux' && matrix.os[2] == 'gcc'
      shell: bash
      working-directory: ${{runner.workspace}}/build-${{ matrix.buildType }}
      run: echo "CC=gcc-10" >> $GITHUB_ENV

    - name: Configure G++ version (Linux)
      if: runner.os == 'Linux' && matrix.os[2] == 'gcc'
      shell: bash
      working-directory: ${{runner.workspace}}/build-${{ matrix.buildType }}
      run: echo "CXX=g++-10" >> $GITHUB_ENV

    - name: Configure Clang version (Linux)
      if: runner.os == 'Linux' && matrix.os[2] == 'clang'
      shell: bash
      working-directory: ${{runner.workspace}}/build-${{ matrix.buildType }}
      run: echo "CC=clang-12" >> $GITHUB_ENV

    - name: Install necessary packages (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get install pkg-config libgtk-3-dev libsecret-1-dev libgcrypt20-dev libsystemd-dev

    - name: Install necessary packages
      shell: bash
      run: $VCPKG_ROOT/vcpkg install --clean-buildtrees-after-build wxwidgets:${{ matrix.os[1] }}
