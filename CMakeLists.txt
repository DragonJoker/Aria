cmake_minimum_required( VERSION 3.15 )
cmake_policy( VERSION 3.15 )

if ( VCPKG_TARGET_TRIPLET )
	set( VCPKG_TOOLCHAIN ON )
endif ()

# Setup lookup for external modules
if ( VCPKG_TOOLCHAIN )
	set( CMAKE_MODULE_PATH
		${CMAKE_CURRENT_SOURCE_DIR}/CMake
		${CMAKE_CURRENT_SOURCE_DIR}/CMake/Modules
		${CMAKE_CURRENT_SOURCE_DIR}/CMake/Toolchains
	)
else ()
	set( CMAKE_MODULE_PATH
		${CMAKE_CURRENT_SOURCE_DIR}/CMake
		${CMAKE_CURRENT_SOURCE_DIR}/CMake/Modules
		${CMAKE_CURRENT_SOURCE_DIR}/CMake/Modules/Traditional
		${CMAKE_CURRENT_SOURCE_DIR}/CMake/Toolchains
	)
endif ()

set( CMAKE_MAP_IMPORTED_CONFIG_MINSIZEREL Release )
set( CMAKE_MAP_IMPORTED_CONFIG_RELWITHDEBINFO Release )

set( CMAKE_TEMPLATES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/CMake/Templates )
set( CMAKE_POSITION_INDEPENDENT_CODE ON )

project( Aria )

set( VERSION_YEAR 2021 )
set( VERSION_MAJOR 1 )
set( VERSION_MINOR 0 )
set( VERSION_BUILD 0 )
set( MAIN_PROJECT_NAME ${PROJECT_NAME} )

include( Setup )
include( Project )
include( CompilerVersion )
include( CompilationFlags )
include( ExternalDependencies )

set_property( GLOBAL PROPERTY USE_FOLDERS ON )

option( Aria_BUILD_SETUP "Build setup projects" OFF )

macro( aria_release_pdbs _TARGET_NAME )
	if( CMAKE_CXX_COMPILER_ID MATCHES "MSVC" )
		target_compile_options( ${_TARGET_NAME} PRIVATE "$<$<CONFIG:Release>:/Zi>" )
		target_link_options( ${_TARGET_NAME} PRIVATE "$<$<CONFIG:Release>:/DEBUG>" )
		target_link_options( ${_TARGET_NAME} PRIVATE "$<$<CONFIG:Release>:/OPT:REF>" )
		target_link_options( ${_TARGET_NAME} PRIVATE "$<$<CONFIG:Release>:/OPT:ICF>" )
	endif()
endmacro()

set( BASE_SOURCE_DIR ${CMAKE_SOURCE_DIR} )
set( BASE_BINARY_DIR ${CMAKE_BINARY_DIR} )

if ( Aria_BUILD_SETUP )
	if ( PROJECTS_PACKAGE_WIX OR PROJECTS_PACKAGE_DEB OR PROJECTS_PACKAGE_RPM )
		file( MAKE_DIRECTORY ${PROJECTS_SETUP_OUTPUT_DIR}/${CMAKE_BUILD_TYPE} )
		set( CPACK_PACKAGE_NAME "${PROJECT_NAME}" )
		set( CPACK_PACKAGE_VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_BUILD}" )
		set( CPACK_PACKAGE_DESCRIPTION_SUMMARY "${PROJECT_NAME} tests browser" )
		set( CPACK_PACKAGE_DESCRIPTION "Render tests appication" )
		set( CPACK_PACKAGE_RELEASE 1 )
		set( CPACK_PACKAGE_CONTACT "dragonjoker59@hotmail.com" )
		set( CPACK_PACKAGE_VENDOR "DragonJoker" )
		set( CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${PROJECTS_PLATFORM} )
		set( CPACK_OUTPUT_FILE_PREFIX ${PROJECTS_SETUP_OUTPUT_DIR}/${CMAKE_BUILD_TYPE} )
		configure_file( ${CMAKE_CURRENT_SOURCE_DIR}/LICENSE ${CMAKE_CURRENT_BINARY_DIR}/LICENSE.txt COPYONLY )
		set( CPACK_RESOURCE_FILE_LICENSE ${CMAKE_CURRENT_BINARY_DIR}/LICENSE.txt )
		set( CMAKE_SYSTEM_ARCHITECTURE ${PROJECTS_PLATFORM} )

		if ( PROJECTS_PACKAGE_WIX )
			set( CPACK_GENERATOR "WIX" )
			set( CPACK_PACKAGE_INSTALL_DIRECTORY "${PROJECT_NAME}" )
			set( CPACK_WIX_UPGRADE_GUID "D1A885B3-38D5-47A3-AAD6-B45B523BBBF4" )
			set( CPACK_WIX_PRODUCT_GUID "2A6B4B9A-4707-4903-AB34-4133FDFB3710" )
			set( CPACK_WIX_PRODUCT_ICON "${CMAKE_CURRENT_SOURCE_DIR}/source/Aria/Win32/Aria.ico" )
			set( CPACK_WIX_UI_DIALOG "${CMAKE_CURRENT_SOURCE_DIR}/install/dialog.bmp" )
			set( CPACK_WIX_UI_BANNER "${CMAKE_CURRENT_SOURCE_DIR}/install/banner.bmp" )
			set( CPACK_WIX_PROGRAM_MENU_FOLDER "Castor3D" )
			set( CPACK_WIX_CULTURES "fr-FR;en-EN" )
		elseif ( PROJECTS_PACKAGE_DEB )
			set( CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX} )
			set( CPACK_DEB_COMPONENT_INSTALL ON )
			set( CPACK_GENERATOR "DEB" )
			set( CPACK_DEBIAN_PACKAGE_MAINTAINER "Sylvain Doremus" )
			set( CPACK_DEBIAN_PACKAGE_DEPENDS "libwxgtk3.0" )
			set( CPACK_DEBIAN_PACKAGE_ARCHITECTURE "${CMAKE_SYSTEM_ARCHITECTURE}" )
			set( CPACK_DEBIAN_PACKAGE_SECTION "devel" )
			set( CPACK_DEBIAN_PACKAGE_PRIORITY "optional" )
		elseif ( PROJECTS_PACKAGE_RPM )
			set( ${${PROJECT_NAME}_PACKAGE_DIR} ${CMAKE_CURRENT_BINARY_DIR}/_CPack_Packages/Linux/RPM )
			set( CPACK_RPM_COMPONENT_INSTALL ON )
			set( CPACK_RPM_PACKAGE_SUMMARY "${PROJECT_NAME}" )
			set( CPACK_RPM_PACKAGE_ARCHITECTURE "${CMAKE_SYSTEM_ARCHITECTURE}" )
			set( CPACK_RPM_PACKAGE_GROUP "Development/Tools/Other" )
			set( CPACK_RPM_PACKAGE_LICENSE "MIT" )
			set( CPACK_RPM_SPEC_MORE_DEFINE "%define _rpmdir ${${PROJECT_NAME}_PACKAGE_DIR}" )
			set( CPACK_RPM_SPEC_MORE_DEFINE "%define _rpmfilename ${CPACK_PACKAGE_FILE_NAME}.rpm" )
			set( CPACK_RPM_SPEC_MORE_DEFINE "%define _unpackaged_files_terminate_build 0" )
			set( CPACK_RPM_SPEC_MORE_DEFINE "%define _topdir ${${PROJECT_NAME}_PACKAGE_DIR}" )
		endif()
	endif ()

	include(CPack)
	cpack_add_install_type( Full )
endif ()

add_subdirectory( source )
